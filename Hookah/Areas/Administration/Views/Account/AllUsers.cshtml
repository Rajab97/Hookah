
@using Hookah.Areas.Administration.Controllers
@using Hookah.Resources
@using Hookah.Areas.Administration.Models
@using Hookah.Constants
@using Hookah.Areas.Administration.ViewComponents
@section Styles{ 
    <link href="~/assets/plugins/custom/datatables/datatables.bundle.css" rel="stylesheet" type="text/css" />
}

<div class="d-flex flex-column-fluid">
    <!--begin::Container-->
    <div class="container">
        <!--begin::Profile Change Password-->
        <div class="d-flex flex-column align-items-lg-start flex-lg-row">
            <!--begin::Aside-->
            @await Component.InvokeAsync(nameof(MyProfileLeftAside))
            <!--end::Aside-->
            <!--begin::Content-->
            <div class="flex-row-fluid ml-lg-8">
                <!--begin::Card-->
                <div class="card card-custom">
                    <div class="card-header">
                        <div class="card-title">
                           
                            <h3 class="card-label">@UI.AllUsers</h3>
                        </div>
                        <div class="card-toolbar">
                            <!--begin::Dropdown-->
                            <!--begin::Button-->
                            <a href="@Url.Action(nameof(AccountController.AddNewUser),AccountController.Name,new { area=AreaConstants.Admin })" class="btn btn-primary font-weight-bolder">
                                <span class="svg-icon svg-icon-md">
                                    <!--begin::Svg Icon | path:assets/media/svg/icons/Design/Flatten.svg-->
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <rect x="0" y="0" width="24" height="24" />
                                            <circle fill="#000000" cx="9" cy="15" r="6" />
                                            <path d="M8.8012943,7.00241953 C9.83837775,5.20768121 11.7781543,4 14,4 C17.3137085,4 20,6.6862915 20,10 C20,12.2218457 18.7923188,14.1616223 16.9975805,15.1987057 C16.9991904,15.1326658 17,15.0664274 17,15 C17,10.581722 13.418278,7 9,7 C8.93357256,7 8.86733422,7.00080962 8.8012943,7.00241953 Z" fill="#000000" opacity="0.3" />
                                        </g>
                                    </svg>
                                    <!--end::Svg Icon-->
                                </span>New User
                            </a>
                            <!--end::Button-->
                        </div>
                    </div>
                    <div class="card-body">
                        <!--begin: Datatable-->
                        <table class="table table-bordered table-hover table-checkable" id="kt_datatable" style="margin-top: 13px !important">
                            <thead>
                                <tr>
                                    <th>Username</th>
                                    <th>Firstname</th>
                                    <th>Lastname</th>
                                    <th>Email</th>
                                    <th>Phonenumber</th>
                                    <th>Blocked Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                        <!--end: Datatable-->
                    </div>
                </div>
            </div>
            <!--end::Content-->
        </div>
        <!--end::Profile Change Password-->
    </div>
    <!--end::Container-->
</div>


@section Scripts{
    <script src="~/assets/plugins/custom/datatables/datatables.bundle.js"></script>
    <!--end::Page Vendors-->
    <!--begin::Page Scripts(used by this page)-->
    <script>
        var selectedData = null;
        var dt;
        var KTDatatablesDataSourceAjaxServer = function () {

            var initTable1 = function () {
                var table = $('#kt_datatable');

                // begin first table
                 dt = table.DataTable({
                    responsive: true,
                    searchDelay: 1000,
                    processing: true,
                    serverSide: true,
                    colReorder: true,
                    keys: false,

                    //It is for grouping
                   @* order: [[2, 'asc']],
                    rowGroup: {
                        dataSrc: 2,
                    },*@

                    select: {
                        style: 'single', //multi
                        //selector: 'td:first-child .checkable',
                    },

                    pageLength: 10,
                    lengthMenu: [[5, 10, 15 , 25 ,50], [ 5, 10, 15 , 25 ,50]],
                    ajax: {
                        url: '@Url.Action(nameof(AccountController.AllUsersData),AccountController.Name)',
                        type: 'POST',
                        datatype:"json",
                        data: {
                            // parameters for custom backend script demo
                          @*  columnsDef: [
                                'UserName', 'FirstName',
                                'LastName', 'Email', 'PhoneNumber',"IsBlocked","Id"],*@
                        },
                    },
                    columns: [
                        { data: '@nameof(Hookah.Models.User.UserName)', autowidth: true },
                        { data: '@nameof(Hookah.Models.User.FirstName)', autowidth: true },
                        { data: '@nameof(Hookah.Models.User.LastName)', autowidth: true },
                        { data: '@nameof(Hookah.Models.User.Email)', autowidth: true},
                        { data: '@nameof(Hookah.Models.User.PhoneNumber)', autowidth: true},
                        { data: '@nameof(Hookah.Models.User.IsBlocked)', autowidth: true },
                        { data: '@nameof(Hookah.Models.User.Id)', autowidth: true, searchable: false, responsivePriority: -1 }
                    ],
                    columnDefs: [
                       @* {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },*@
                        {
                            width: '50px',
                            targets: 5,
                            render: function (data, type, full, meta) {
                                var status = {
                                    1: { 'title': 'Blocked', 'class': ' label-light-danger' },
                                    0: { 'title': 'Active', 'class': ' label-light-success' },
                                };
                                data = data ? 1 : 0;
                                if (typeof status[data] === 'undefined') {
                                    return data;
                                }
                                console.log(data);
                                return '<span class="label label-lg font-weight-bold' + status[data].class + ' label-inline">' + status[data].title + '</span>';
                            }
                        },
                        {
                            targets: 6,
                            title: 'Actions',
                            orderable: false,
                            render: function (data, type, full, meta) {
                                return '\
                                        <div class="dropdown dropdown-inline">\
								            <a href="javascript:;" class="btn btn-sm btn-clean btn-icon" data-toggle="dropdown">\
	                                            <i class="la la-cog"></i>\
	                                        </a>\
							  	            <div class="dropdown-menu dropdown-menu-sm dropdown-menu-right">\
									            <ul class="nav nav-hoverable flex-column">\
							    		            <li class="nav-item"><a class="nav-link" href="javascript:;" onclick=deleteUser("' + full.Id + '")><i class="nav-icon la la-trash"></i><span class="nav-text">Delete</span></a></li>\
							    		            <li class="nav-item"><a class="nav-link" href="javascript:;" onclick=blockUser("'+ full.Id + '")><i class="nav-icon la la-lock"></i><span class="nav-text">Block</span></a></li>\
							    		            <li class="nav-item"><a class="nav-link" href="javascript:;" onclick=unblockUser("'+ full.Id +'")><i class="nav-icon la la-lock-open"></i><span class="nav-text">Activate</span></a></li>\
									            </ul>\
							  	            </div>\
							            </div>\
                                        ';
                            },
                        }
                        @*,
                        {
                            width: '75px',
                            targets: -3,
                            render: function (data, type, full, meta) {
                                var status = {
                                    1: { 'title': 'Pending', 'class': 'label-light-primary' },
                                    2: { 'title': 'Delivered', 'class': ' label-light-danger' },
                                    3: { 'title': 'Canceled', 'class': ' label-light-primary' },
                                    4: { 'title': 'Success', 'class': ' label-light-success' },
                                    5: { 'title': 'Info', 'class': ' label-light-info' },
                                    6: { 'title': 'Danger', 'class': ' label-light-danger' },
                                    7: { 'title': 'Warning', 'class': ' label-light-warning' },
                                };
                                if (typeof status[data] === 'undefined') {
                                    return data;
                                }
                                return '<span class="label label-lg font-weight-bold' + status[data].class + ' label-inline">' + status[data].title + '</span>';
                            },
                        },
                        {
                            width: '75px',
                            targets: -2,
                            render: function (data, type, full, meta) {
                                var status = {
                                    1: { 'title': 'Online', 'state': 'danger' },
                                    2: { 'title': 'Retail', 'state': 'primary' },
                                    3: { 'title': 'Direct', 'state': 'success' },
                                };
                                if (typeof status[data] === 'undefined') {
                            AreaConstantsrAdmineaConstants       return data;
                                }
                                return '<span class="label label-' + status[data].state + ' label-dot mr-2"></span>' +
                                    '<span class="font-weightAccoNameuntControllerbold text-' + status[data].state + '">' + status[data].title + '</span>';
                            },
                        },*@
                    ],
                });

                table.on('select.dt', function () {
                    selectedData = dt.row({ selected: true }).data();
                });
            };

            return {

                //main function to initiate the modulenameof
                init: function () {
                    initTable1();
                },

            };

        }();

        jQuery(document).ready(function () {
            KTDatatablesDataSourceAjaxServer.init();
        });

        function blockUser(id) {
            ajax.sendRequest('@Url.Action(nameof(AccountController.ChangeStatusOfUser),AccountController.Name)', "POST", {
                userId: id,
                isBlocked: true
            }, function () {
                    dt.ajax.reload();
            });
        }
        function unblockUser(id) {
            ajax.sendRequest('@Url.Action(nameof(AccountController.ChangeStatusOfUser),AccountController.Name)', "POST", {
                userId: id,
                isBlocked: false
            }, function () {
                    dt.ajax.reload();
            });
        }
        function deleteUser(id) {

        }
    </script>
}