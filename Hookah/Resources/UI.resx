<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountSettingAndMore" xml:space="preserve">
    <value>Account settings and more</value>
  </data>
  <data name="AddCatheringEvent" xml:space="preserve">
    <value>Add new cathering event</value>
  </data>
  <data name="AddFooterGalaryItem" xml:space="preserve">
    <value>Add new gallery item</value>
  </data>
  <data name="AddFruitHead" xml:space="preserve">
    <value>Add new fruit head</value>
  </data>
  <data name="AddHomeLink" xml:space="preserve">
    <value>Add new link</value>
  </data>
  <data name="AddHowItWorksStep" xml:space="preserve">
    <value>Add new step</value>
  </data>
  <data name="Additions" xml:space="preserve">
    <value>Addtions and Preferences</value>
  </data>
  <data name="AddMenuFlavor" xml:space="preserve">
    <value>Add new menu flavor</value>
  </data>
  <data name="AddNewUser" xml:space="preserve">
    <value>Add new user</value>
  </data>
  <data name="AddPackage" xml:space="preserve">
    <value>Add new package</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="AllUsers" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="BaseTitle" xml:space="preserve">
    <value>Base title</value>
  </data>
  <data name="BaseTitleBoldText" xml:space="preserve">
    <value>Base title bold paragraph</value>
  </data>
  <data name="BaseTitleText" xml:space="preserve">
    <value>Base title paragraph</value>
  </data>
  <data name="ButtonText" xml:space="preserve">
    <value>Button text</value>
  </data>
  <data name="CallButtonText" xml:space="preserve">
    <value>Call button text</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="ConfirmPassowrd" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="EditCatheringEvent" xml:space="preserve">
    <value>Edit cathering event</value>
  </data>
  <data name="EditFooterGalaryItem" xml:space="preserve">
    <value>Edit current gallery item</value>
  </data>
  <data name="EditFruitHead" xml:space="preserve">
    <value>Edit fruit head</value>
  </data>
  <data name="EditHomeLink" xml:space="preserve">
    <value>Edit home link</value>
  </data>
  <data name="EditHowItWorksStep" xml:space="preserve">
    <value>Edit current step</value>
  </data>
  <data name="EditLower" xml:space="preserve">
    <value>edit</value>
  </data>
  <data name="EditMenuFlavor" xml:space="preserve">
    <value>Edit menu flavor</value>
  </data>
  <data name="EditPackage" xml:space="preserve">
    <value>Edit package</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EventDate" xml:space="preserve">
    <value>Event date</value>
  </data>
  <data name="EventName" xml:space="preserve">
    <value>Event name</value>
  </data>
  <data name="ExtraHourPrice" xml:space="preserve">
    <value>Extra price per hour</value>
  </data>
  <data name="FacebookLink" xml:space="preserve">
    <value>Facebook profile link</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Firstname</value>
  </data>
  <data name="FlavorsText" xml:space="preserve">
    <value>Flavors section text</value>
  </data>
  <data name="FlavorsTitle" xml:space="preserve">
    <value>Flavors section title</value>
  </data>
  <data name="FormTile" xml:space="preserve">
    <value>Form section title</value>
  </data>
  <data name="FruitHeadText" xml:space="preserve">
    <value>Fruit heads section text</value>
  </data>
  <data name="FruitHeadTitle" xml:space="preserve">
    <value>Fruit heads section title</value>
  </data>
  <data name="HourseOfService" xml:space="preserve">
    <value>How many hourse of service</value>
  </data>
  <data name="HowItWorksTitle" xml:space="preserve">
    <value>How it works title</value>
  </data>
  <data name="ImageLP" xml:space="preserve">
    <value>Previously added laptop size image</value>
  </data>
  <data name="ImageMB" xml:space="preserve">
    <value>Previously added mobile size image</value>
  </data>
  <data name="ImagePL" xml:space="preserve">
    <value>Previously added IPad size image</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Image info</value>
  </data>
  <data name="InitialPrice" xml:space="preserve">
    <value>Initial price</value>
  </data>
  <data name="InstagramLink" xml:space="preserve">
    <value>Instagram profile link</value>
  </data>
  <data name="InstagramProfileName" xml:space="preserve">
    <value>Instagram profile name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="Link" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="NewItem" xml:space="preserve">
    <value>Add new item</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="OrderNumber" xml:space="preserve">
    <value>Step order number</value>
  </data>
  <data name="OrderSendedSuccessfully" xml:space="preserve">
    <value>Order sended succesfully</value>
  </data>
  <data name="OrderSendedSuccessfullyText" xml:space="preserve">
    <value>Your order has been accepted and you will be contacted soon</value>
  </data>
  <data name="OrderTitle" xml:space="preserve">
    <value>Order title</value>
  </data>
  <data name="Package" xml:space="preserve">
    <value>Package</value>
  </data>
  <data name="PackageItem" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Packages" xml:space="preserve">
    <value>Packages</value>
  </data>
  <data name="PageParagraphText" xml:space="preserve">
    <value>Paragraph text</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PersonalInfo" xml:space="preserve">
    <value>Personal Information</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phonenumber</value>
  </data>
  <data name="PhoneNumberForCall" xml:space="preserve">
    <value>Phone number for calling</value>
  </data>
  <data name="PreviousUploadedImage" xml:space="preserve">
    <value>Previously uploaded image</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="RequestCallButton" xml:space="preserve">
    <value>Request call button text</value>
  </data>
  <data name="SelectPackageTitle" xml:space="preserve">
    <value>Select package title</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="StepText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SuperAdmin" xml:space="preserve">
    <value>Super Admin</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title of package</value>
  </data>
  <data name="TopImageTitle" xml:space="preserve">
    <value>Top image title</value>
  </data>
  <data name="TwitterLink" xml:space="preserve">
    <value>Twitter profile link</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UserPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Okey</value>
  </data>
  <data name="YoutubeLink" xml:space="preserve">
    <value>Youtube profile link</value>
  </data>
</root>